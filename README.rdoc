= KetaiPost
Author:: Yuichi Takeuchi <mizincogrammer@gmail.com>
Website:: http://takeyu-web.com/
Copyright:: Copyright 2010 Yuichi Takeuchi
License:: GPL v2

Movable Type (MTOS) 5 にメール投稿機能を追加するためのプラグインです。
類似の機能をもつプラグインはすでに存在しますがライセンス上の問題により自作しましたので、公開します。

== 特徴
* メールでブログ記事の投稿が行えるようになります。
* 写真付きメールを送信すると、アイテムに登録した上で記事に掲載します。複数枚の添付にも対応しています。（きちんと"ブログ記事アイテム"として登録します）
* 写真は自動的にサムネイルを生成されます。
* サムネイルの大きさと形状（正方形に切り抜くか、そのまま縮小するか）を設定可能。
* 公開設定及びコメント・トラックバック受付可否はブログの設定を利用するので、たとえばメールで受け付け時点では下書きとし、確認してから公開といったことも可能です。
* マルチブログ対応･･･というかマルチブログ・マルチユーザ環境を強く意識しており、ブログ毎に受付メールアドレスを設定できます。
* カテゴリ設定可能。ブログとあわせて、掲載カテゴリを指定できます。もちろん、同じブログにカテゴリ毎に別々の受け付けようメールアドレスを設定することもできます。
* 送信元メールアドレスとMovable Typeのユーザーの関連づけが可能。同じ受付メールアドレスに送信しても、送信元によってAさん、Bさんの記事として登録することができます。
* ユーザーの管理権限はMovable Typeのそれに準じます。これにより、Aさんはブログ1だけ投稿可能といったことができます。
* 匿名ユーザーを設定可能です。記事の投稿のみを許可したユーザーを作成し、不特定多数のユーザーからの投稿を受け付けることができます。
* 投稿可能なユーザーを送信元メールアドレスで制限することができます。匿名ユーザーを作成しない場合、あらかじめ登録した送信元メールアドレスからのみ記事の追加が可能です。
* メールの件名が省略された時のデフォルトの記事タイトルをブログ・ウェブサイト別に指定することが可能です。
* 受付用メールアドレスに「拡張メールアドレス」を指定することも可能なので、1つのメールボックスでたくさんの受付用メールアドレスを設定することが可能です。（Gmail等、拡張メールアドレスが使用可能なメールサーバーを利用のこと）
* 写真に含まれるEXIF情報を使って、正しい向きに回転させて登録できます。（Image::ExifToolモジュールが必要）
* 写真にGPSによる位置情報が含まれる場合は、記事に地図を表示させることができます。（設定ON/OFF可能）（実機では未確認。テスト環境がないので・・・）
* Gmailを利用すれば、絵文字を利用できます。（Gmail以外の場合は、各キャリア網から抜けた時点で〓に変換されるため無理です）（私が持っているSO503i以外ではテストできていません。au/Softbankでは未知数。）
* pure Perlの絵文字変換モジュール Encode::JP::Emoji を利用する為、共用サーバ等での絵文字利用も比較的容易です
* どなたでも無料で利用できます。
* 万年β？テスト状態です。


== 動作環境
* cron が利用可能であること。（利用できない方は、RunPeriodicTasksプラグインが使えるかも知れません。）
* Movable Type/MTOS バージョン5.0。
* Perl 5.8.1 以上で以下のモジュールがインストールされているサーバーであること。
  * <tt>Mail::POP3Client</tt>
  * <tt>MIME-tools</tt>
  また、POP3 over SSL (Gmailなど)のメールボックスを使用する場合は、次も必要です。
  * <tt>IO::Socket::SSL</tt>
  EXIF情報を使った写真の回転や位置情報の表示を行う場合は、次も必要です。
  * <tt>Image::ExifTool</tt>
  * <tt>Image::Magick</tt> （写真の回転を行う場合）
  Gmailを利用する方で、絵文字入りメールを掲載する場合は、Yusuke Kawasaki氏による次のモジュールが必要です。
  * <tt>Encode::JP::Emoji</tt> ( http://search.cpan.org/~kawasaki/Encode-JP-Emoji-0.05/ )
  * <tt>Encode::JP::Emoji::FB_EMOJI_TYPECAST</tt> ( http://search.cpan.org/~kawasaki/Encode-JP-Emoji-FB_EMOJI_TYPECAST-0.05/ )

  なお、 Mail::POP3Client 及び MIME-tools 、Encode::JP::Emoji については、extlib に配置することで動作します。（たぶん）
  * <tt>extlib/Mail/POP3Client.pm</tt>
  * <tt>extlib/MIME/*</tt>	
  * <tt>extlib/Encode/JP/Emoji.pm</tt>
  * <tt>extlib/Encode/JP/Emoji/*</tt>

== しくみ
KetaiPostはごくありふれた方法で記事の投稿を実現します。

投稿受付用メールアドレスを用意、POP3の接続情報を登録しておくことで、KetaiPostがメールボックスにアクセス、宛先に投稿受付用メールアドレスが指定されたメールが存在するかを確認します。

見つかったら、送信元のメールアドレスから投稿ユーザーを決定します。見つからない時はそのメールは破棄します。
ユーザーを特定できたら、そのブログに記事を追加できるか、権限の確認を行います。

投稿できることを確認したら、実際に記事を作成し、必要に応じてカテゴリ設定及びアイテムの追加を行います。
記事の投稿が完了したら、メールを削除します。

最後に、ブログの投稿設定において新しい記事の状態が「公開」（デフォルト）であれば再構築を行います。


== インストール方法
=== メールボックスの用意
POP3でメールを受信可能な適当なメールアドレス（メールボックス）を用意します。

Gmailがオススメですが、その場合には<tt>IO::Socket::SSL</tt>モジュールが利用可能であることを確認して下さい。

いたずらを防止するため、予想不可能なメールアドレスにします。
また、公開したくないメールを誤って記事として投稿してしまうリスクを考えて、KetaiPost以外で利用しない専用のメールアドレスが良いです。

拡張メールアドレス（@の前の+以降を無視する機能）が利用できれば、予測不可能なメールアドレスをたくさん用意することができます。

  例）hoge+xxxx@takeyu-web.com が hoge@takeyu-web.com に届く。

=== ダウンロード・配置
KetaiPostディレクトリ（フォルダ）をpluginsディレクトリにそのままコピーしてください。

管理画面にアクセスすると、データベースの更新が自動的にはじまり、インストールが完了します。

必要モジュールが足りない場合は、便宜cpan等でインストールするか、extlibディレクトリへ配置して下さい。

=== インストール確認
ツール -> プラグインで一覧に「KetaiPost」が表示され、「KetaiPost」の「詳細」タブで必要な依存モジュールが「使用できます」と表示されていることを確認して下さい。

=== KetaiPostの設定
受付用メールアドレス（送信先）とユーザー（送信元）の設定を行う必要があります。

1. 「システム」メニューから、「設定」->「KetaiPost」を選びます。
2. KetaiPostの管理画面が表示されるので、「新しい送信先メールアドレスを登録」のリンクを押します。
3. メールでの投稿を受け付けるブログを選択ボックスから選び、「次へ」を押します。
4. 投稿先のカテゴリやPOP3の接続情報などを記入し、「OK」を押します。
5. 送信先メールアドレスの表に追加されたことを確認します。

6. 「新しい送信元メールアドレスを登録」のリンクを押します。
7. 投稿に使用するユーザーを選び、（携帯）メールアドレスを記入します。匿名ユーザーからの投稿を受け付ける場合には、「送信元メールアドレス」は空白にしておきます。できたら、「OK」を押します。
8. 送信元メールアドレスの表に追加されたことを確認します。

=== Taskの設定
定期的にメール受信処理が動くように設定します。
公式サイトのドキュメント（http://www.movabletype.jp/documentation/schedule_task_framework.html ）を参考に設定して下さい。

また、cronが使えない環境の方は、H.Fujimotoさんが公開されている、RunPeriodicTasksプラグイン（http://www.h-fj.com/blog/mtplgdoc/ ）が利用できるかもしれません。

=== 投稿確認
実際に受付用メールアドレスにメールを送信し、しばらくして記事として追加されることを確認します。


== ご注意
* 無保証です。このプラグインを使用したことでいかなる損害が発生しても、制作者は一切責任を負いません。
* すべての携帯電話などから正しく投稿できることを保証するものではありません。そもそもきちんと動くことも保証しません。
* 制作者は Movable Type プラグイン作成は初めてです。処女作です。何か致命的な誤り・勘違いがある可能性があります。
